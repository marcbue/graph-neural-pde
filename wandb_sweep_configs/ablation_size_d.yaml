program: run_GNN.py
method: random
parameters:
  dataset:
    values: [chameleon]
  block:
    values: [constant]
  function:
    values: [greed_non_linear]
  epoch:
    values: [100]
  num_splits:
    values: [10]
  method:
    values: [euler]
  gnl_style:
    values: [general_graph]
  gnl_activation:
    values: [identity]
  gnl_W_style:

    values: [sum, diag, diag_dom, k_diag]

      for diag and diag dom consider 2 different initialisation styles - maybe need to do W ablation first to determine this
      elif self.opt['gnl_W_style'] == 'diag':
        uniform(self.gnl_W_D, a=-1, b=1)


  gnl_measure:
    values: [nodewise]
  gnl_omega:
    values: [zero]
  drift:
    values: [False]
  test_mu_0:
    values: [True]
  add_source:
    values: [False]
  step_size:
    values: [1.0]
  hidden_dim:
    values: [1, 2, 4, 8, 16, 32, 64, 128, 256, 512]
  time:
    values: [3]
  input_dropout:
    vales: [0.5]
  dropout:
    vales: [0.35]
  optimizer:
    values: [adam]
  lr:
    vales: [0.005]
  decay:
    vales: [0.0]
command:
  - ${env}
  - python3
  - ${program}
  - ${args}
  - --wandb
  - --wandb_sweep
  - --geom_gcn_splits
entity: graph_neural_diffusion
project: greed_general_0_a